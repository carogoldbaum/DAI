{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar axiosClient = axios.create({\n  baseURL: \"http://challenge-react.alkemy.org/\"\n});\n\nvar _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    errorAxios = _React$useState2[0],\n    setErrorAxios = _React$useState2[1];\n\n{\n  errorAxios && _jsx(Text, {\n    style: styles.alerta,\n    children: \"Error AXIOS\"\n  });\n}\nexport var PostLogIn = function _callee(userState) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", axiosClient.post('', _objectSpread({}, userState)).then(function (response) {\n            if (response.status < 300) {\n              return response.data;\n            } else {\n              console.log(\"Algo no funciona\");\n              setErrorAxios(true);\n            }\n          }).catch(function (err) {\n            console.log(\"No funciona\", err);\n            throw err;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["axios","axiosClient","create","baseURL","React","useState","errorAxios","setErrorAxios","styles","alerta","PostLogIn","userState","post","then","response","status","data","console","log","catch","err"],"sources":["C:/Users/devandroid/Desktop/DAI/TP-DAI-RN/Axios/AxiosClient.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: \"http://challenge-react.alkemy.org/\"\r\n})\r\nconst [errorAxios, setErrorAxios] = React.useState(false);\r\n{errorAxios && <Text style={styles.alerta}>Error AXIOS</Text>}\r\n\r\nexport const PostLogIn= async (userState) =>{\r\n    return axiosClient.post('', {\r\n        ...userState\r\n    }).then(response =>{\r\n        if(response.status < 300){\r\n            return response.data\r\n        }\r\n        else {\r\n            console.log(\"Algo no funciona\")\r\n            setErrorAxios(true)\r\n        }\r\n    })\r\n    .catch(function(err) {\r\n        console.log(\"No funciona\", err)\r\n        throw err\r\n    })\r\n}"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC7BC,OAAO,EAAE;AADoB,CAAb,CAApB;;AAGA,sBAAoCC,KAAK,CAACC,QAAN,CAAe,KAAf,CAApC;AAAA;AAAA,IAAOC,UAAP;AAAA,IAAmBC,aAAnB;;AACA;EAACD,UAAU,IAAI,KAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,MAApB;IAAA;EAAA,EAAd;AAA6D;AAE9D,OAAO,IAAMC,SAAS,GAAE,iBAAOC,SAAP;EAAA;IAAA;MAAA;QAAA;UAAA,iCACbV,WAAW,CAACW,IAAZ,CAAiB,EAAjB,oBACAD,SADA,GAEJE,IAFI,CAEC,UAAAC,QAAQ,EAAG;YACf,IAAGA,QAAQ,CAACC,MAAT,GAAkB,GAArB,EAAyB;cACrB,OAAOD,QAAQ,CAACE,IAAhB;YACH,CAFD,MAGK;cACDC,OAAO,CAACC,GAAR,CAAY,kBAAZ;cACAX,aAAa,CAAC,IAAD,CAAb;YACH;UACJ,CAVM,EAWNY,KAXM,CAWA,UAASC,GAAT,EAAc;YACjBH,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,GAA3B;YACA,MAAMA,GAAN;UACH,CAdM,CADa;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAjB"},"metadata":{},"sourceType":"module"}