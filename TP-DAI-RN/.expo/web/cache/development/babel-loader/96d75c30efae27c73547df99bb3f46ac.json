{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { IS_ANDROID, IS_LT_LOLLIPOP, noop } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Touchable = function Touchable(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      children = _ref.children;\n\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return _jsx(TouchableNativeFeedback, {\n      background: TouchableNativeFeedback.SelectableBackground(),\n      onPress: onPress,\n      children: _jsx(View, {\n        style: style,\n        children: children\n      })\n    });\n  } else {\n    return _jsx(TouchableOpacity, {\n      onPress: onPress,\n      style: style,\n      children: children\n    });\n  }\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  style: ViewPropTypes.style,\n  children: PropTypes.node.isRequired\n};\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {}\n};\nexport default Touchable;","map":{"version":3,"names":["React","PropTypes","ViewPropTypes","IS_ANDROID","IS_LT_LOLLIPOP","noop","Touchable","onPress","style","children","TouchableNativeFeedback","SelectableBackground","propTypes","func","isRequired","node","defaultProps"],"sources":["C:/Users/devandroid/Desktop/DAI/TP-DAI-RN/node_modules/react-native-cards/src/Touchable.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  TouchableNativeFeedback,\r\n  ViewPropTypes,\r\n} from 'react-native';\r\nimport {\r\n  IS_ANDROID,\r\n  IS_LT_LOLLIPOP,\r\n  noop,\r\n} from './utils';\r\n\r\nconst Touchable = ({ onPress, style, children }) => {\r\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\r\n    return (\r\n      <TouchableNativeFeedback\r\n        background={TouchableNativeFeedback.SelectableBackground()}\r\n        onPress={onPress}\r\n      >\r\n        <View\r\n          style={style}\r\n        >\r\n          {children}\r\n        </View>\r\n      </TouchableNativeFeedback>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n};\r\n\r\nTouchable.propTypes = {\r\n  onPress: PropTypes.func.isRequired,\r\n  style: ViewPropTypes.style,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nTouchable.defaultProps = {\r\n  onPress: noop,\r\n  style: {}\r\n};\r\n\r\nexport default Touchable;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;SAKEC,a;AAEF,SACEC,UADF,EAEEC,cAFF,EAGEC,IAHF;;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkC;EAAA,IAA/BC,OAA+B,QAA/BA,OAA+B;EAAA,IAAtBC,KAAsB,QAAtBA,KAAsB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAClD,IAAIN,UAAU,IAAI,CAACC,cAAnB,EAAmC;IACjC,OACE,KAAC,uBAAD;MACE,UAAU,EAAEM,uBAAuB,CAACC,oBAAxB,EADd;MAEE,OAAO,EAAEJ,OAFX;MAAA,UAIE,KAAC,IAAD;QACE,KAAK,EAAEC,KADT;QAAA,UAGGC;MAHH;IAJF,EADF;EAYD,CAbD,MAcK;IACH,OACE,KAAC,gBAAD;MACE,OAAO,EAAEF,OADX;MAEE,KAAK,EAAEC,KAFT;MAAA,UAIGC;IAJH,EADF;EAQD;AACF,CAzBD;;AA2BAH,SAAS,CAACM,SAAV,GAAsB;EACpBL,OAAO,EAAEN,SAAS,CAACY,IAAV,CAAeC,UADJ;EAEpBN,KAAK,EAAEN,aAAa,CAACM,KAFD;EAGpBC,QAAQ,EAAER,SAAS,CAACc,IAAV,CAAeD;AAHL,CAAtB;AAMAR,SAAS,CAACU,YAAV,GAAyB;EACvBT,OAAO,EAAEF,IADc;EAEvBG,KAAK,EAAE;AAFgB,CAAzB;AAKA,eAAeF,SAAf"},"metadata":{},"sourceType":"module"}