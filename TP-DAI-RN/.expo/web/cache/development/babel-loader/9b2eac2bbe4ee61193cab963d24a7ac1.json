{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Boolean } from \"react-native-web/dist/index\";\nimport { ActionTypes, useContextState } from \"../ContextState\";\nimport BotonAgregar from \"../Components/BotonAgregar\";\nimport BotonEliminar from \"../Components/BotonEliminar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title,\n      image = _ref.image,\n      pricePerServing = _ref.pricePerServing,\n      healthScore = _ref.healthScore,\n      vegan = _ref.vegan;\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: title\n      }), _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.image\n      }), _jsxs(Text, {\n        style: styles.title,\n        children: [\"El precio es: \", pricePerServing]\n      }), _jsxs(Text, {\n        style: styles.title,\n        children: [\"El healthScore es: \", healthScore]\n      }), vegan ? _jsx(Text, {\n        children: \"El plato es vegano\"\n      }) : _jsx(Text, {\n        children: \"El plato no es vegano\"\n      })]\n    })\n  });\n};\n\nvar CardPlato = function CardPlato(props) {\n  var navigation = props.navigation,\n      Detalle = props.Detalle;\n\n  var _useContextState = useContextState(),\n      contextState = _useContextState.contextState,\n      setContextState = _useContextState.setContextState;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      MostrarBoton = _useState2[0],\n      setMostrarBoton = _useState2[1];\n\n  var existePlato = contextState.menu.lista.find(function (plato) {\n    return plato.id === Detalle.id;\n  });\n  useEffect(function () {\n    {\n      var HayVeganos = 0;\n\n      for (var i = 0; i < contextState.menu.lista.length; i++) {\n        if (Detalle.vegan === contextState.menu.lista[i].vegan) {\n          HayVeganos += contextState.menu.cantVeganos + 1;\n        }\n      }\n\n      if (HayVeganos === 2) {\n        setMostrarBoton(true);\n      }\n    }\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Item, {\n      title: Detalle.title,\n      image: Detalle.image,\n      pricePerServing: Detalle.pricePerServing,\n      healthScore: Detalle.healthScore,\n      vegan: Detalle.vegan\n    }), existePlato ? _jsx(_Fragment, {\n      children: _jsx(BotonEliminar, {\n        style: {\n          fontSize: 48\n        },\n        text: \"ELIMINAR\",\n        onPress: function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setContextState({\n                    type: ActionTypes.SetMenuDescontarPricePerServing,\n                    value: Detalle.pricePerServing\n                  });\n                  setContextState({\n                    type: ActionTypes.SetMenuDescontarHealthScore,\n                    value: Detalle.healthScore\n                  });\n                  setContextState({\n                    type: ActionTypes.SetMenuEliminarId,\n                    value: Detalle.id\n                  });\n                  navigation.navigate('Home');\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      })\n    }) : contextState.menu.lista.length < 4 ? _jsx(_Fragment, {\n      children: _jsx(BotonAgregar, {\n        style: {\n          fontSize: 48\n        },\n        text: \"AGREGAR\",\n        onPress: function _callee2() {\n          var HayVeganos, i;\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  HayVeganos = 0;\n\n                  for (i = 0; i < contextState.menu.lista.length; i++) {\n                    if (Detalle.vegan === contextState.menu.lista[i].vegan) {\n                      HayVeganos += contextState.menu.cantVeganos + 1;\n                    }\n                  }\n\n                  if (HayVeganos >= 2) {\n                    setMostrarBoton(true);\n                  } else {\n                    console.log(\"segui agregando\" + HayVeganos);\n                    setContextState({\n                      type: ActionTypes.SetMenuPrecio,\n                      value: Detalle.pricePerServing\n                    });\n                    setContextState({\n                      type: ActionTypes.SetMenuHealthScore,\n                      value: Detalle.healthScore\n                    });\n                    setContextState({\n                      type: ActionTypes.SetMenuLista,\n                      value: Detalle\n                    });\n                    navigation.navigate('Home');\n                  }\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      })\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"El menu ya tiene 4 platos\"\n      }), _jsx(_Fragment, {\n        children: _jsx(BotonAgregar, {\n          style: {\n            fontSize: 48\n          },\n          text: \"VOLVER ATRAS\",\n          onPress: function _callee3() {\n            return _regeneratorRuntime.async(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    navigation.navigate('Home');\n\n                  case 1:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        })\n      })]\n    }), MostrarBoton ? _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"El menu ya tiene 2 platos veganos\"\n      }), _jsx(_Fragment, {\n        children: _jsx(BotonAgregar, {\n          style: {\n            fontSize: 48\n          },\n          text: \"VOLVER ATRAS, YA HAY 2 VEGANOS\",\n          onPress: function _callee4() {\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    navigation.navigate('Home');\n\n                  case 1:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        })\n      })]\n    }) : null]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 12\n  },\n  title: {\n    fontSize: 15\n  },\n  image: {\n    width: 70,\n    height: 70\n  }\n});\nexport default CardPlato;","map":{"version":3,"names":["React","useEffect","useState","Boolean","ActionTypes","useContextState","BotonAgregar","BotonEliminar","Item","title","image","pricePerServing","healthScore","vegan","styles","item","uri","CardPlato","props","navigation","Detalle","contextState","setContextState","MostrarBoton","setMostrarBoton","existePlato","menu","lista","find","plato","id","HayVeganos","i","length","cantVeganos","fontSize","type","SetMenuDescontarPricePerServing","value","SetMenuDescontarHealthScore","SetMenuEliminarId","navigate","console","log","SetMenuPrecio","SetMenuHealthScore","SetMenuLista","StyleSheet","create","container","flex","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal","width","height"],"sources":["C:/Users/devandroid/Desktop/DAI/TP-DAI-RN/Components/CardPlato.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, FlatList, StyleSheet, Text, StatusBar, Image, Boolean } from 'react-native';\r\nimport { ActionTypes, useContextState } from '../ContextState'\r\nimport BotonAgregar from \"../Components/BotonAgregar\";\r\nimport BotonEliminar from \"../Components/BotonEliminar\";\r\n\r\nconst Item = ({ title, image, pricePerServing, healthScore, vegan }) => (\r\n  <View>\r\n    <View style={styles.item}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Image source={{ uri: image }} style={styles.image} />\r\n      <Text style={styles.title}>El precio es: {pricePerServing}</Text>\r\n      <Text style={styles.title}>El healthScore es: {healthScore}</Text>\r\n\r\n      {vegan ? <Text>El plato es vegano</Text> : <Text>El plato no es vegano</Text>}\r\n    </View>\r\n  </View>\r\n);\r\n\r\nconst CardPlato = (props) => {\r\n\r\n  const { navigation, Detalle } = props\r\n  const { contextState, setContextState } = useContextState();\r\n  const [MostrarBoton, setMostrarBoton] = useState(false);\r\n\r\n  let existePlato = contextState.menu.lista.find(plato => plato.id === Detalle.id)\r\n\r\n  useEffect(() => {\r\n    {\r\n      let HayVeganos = 0\r\n\r\n      for (let i = 0; i < contextState.menu.lista.length; i++) {\r\n        if (Detalle.vegan === contextState.menu.lista[i].vegan) {\r\n          HayVeganos += contextState.menu.cantVeganos + 1\r\n        }\r\n      }\r\n\r\n      if (HayVeganos === 2) {\r\n        setMostrarBoton(true)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <View>\r\n      <Item title={Detalle.title} image={Detalle.image} pricePerServing={Detalle.pricePerServing} healthScore={Detalle.healthScore} vegan={Detalle.vegan} />\r\n      {\r\n        existePlato\r\n          ?\r\n          <>\r\n            <BotonEliminar style={{ fontSize: 48 }}\r\n              text=\"ELIMINAR\"\r\n              onPress={async () => {\r\n                setContextState({\r\n                  type: ActionTypes.SetMenuDescontarPricePerServing,\r\n                  value: Detalle.pricePerServing,\r\n                });\r\n\r\n                setContextState({\r\n                  type: ActionTypes.SetMenuDescontarHealthScore,\r\n                  value: Detalle.healthScore,\r\n                });\r\n                setContextState({\r\n                  type: ActionTypes.SetMenuEliminarId,\r\n                  value: Detalle.id,\r\n                });\r\n                navigation.navigate('Home')\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          contextState.menu.lista.length < 4\r\n            ?\r\n            <>\r\n              <BotonAgregar style={{ fontSize: 48 }}\r\n                text=\"AGREGAR\"\r\n                onPress={async () => {\r\n\r\n                  let HayVeganos = 0\r\n\r\n                  for (let i = 0; i < contextState.menu.lista.length; i++) {\r\n                    if (Detalle.vegan === contextState.menu.lista[i].vegan) {\r\n                      HayVeganos += contextState.menu.cantVeganos + 1\r\n                    }\r\n                  }\r\n\r\n                  if (HayVeganos >= 2) {\r\n                    setMostrarBoton(true)\r\n\r\n                  } else {\r\n                    console.log(\"segui agregando\" + HayVeganos)\r\n                    setContextState({\r\n                      type: ActionTypes.SetMenuPrecio,\r\n                      value: Detalle.pricePerServing,\r\n                    });\r\n\r\n                    setContextState({\r\n                      type: ActionTypes.SetMenuHealthScore,\r\n                      value: Detalle.healthScore,\r\n                    });\r\n                    setContextState({\r\n                      type: ActionTypes.SetMenuLista,\r\n                      value: Detalle,\r\n                    });\r\n                    navigation.navigate('Home')\r\n                  }\r\n                }\r\n                }\r\n              />\r\n            </>\r\n            :\r\n            <View>\r\n              <Text>El menu ya tiene 4 platos</Text>\r\n              <>\r\n                <BotonAgregar style={{ fontSize: 48 }}\r\n                  text=\"VOLVER ATRAS\"\r\n                  onPress={async () => {\r\n\r\n                    navigation.navigate('Home')\r\n                  }}\r\n                />\r\n              </>\r\n            </View>\r\n      }\r\n      {MostrarBoton\r\n        ?\r\n        <View>\r\n          <Text>El menu ya tiene 2 platos veganos</Text>\r\n          <>\r\n            <BotonAgregar style={{ fontSize: 48 }}\r\n              text=\"VOLVER ATRAS, YA HAY 2 VEGANOS\"\r\n              onPress={async () => {\r\n\r\n                navigation.navigate('Home')\r\n              }}\r\n            />\r\n          </>\r\n        </View>\r\n        :\r\n        null\r\n      }\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight || 0,\r\n  },\r\n  item: {\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 12,\r\n  },\r\n  title: {\r\n    fontSize: 15,\r\n  },\r\n  image: {\r\n    width: 70,\r\n    height: 70,\r\n  },\r\n});\r\n\r\nexport default CardPlato;"],"mappings":"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"},"metadata":{},"sourceType":"module"}